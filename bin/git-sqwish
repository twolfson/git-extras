#!/bin/sh

master=$1
message=$2

# Determine the starting branch
#          Grab the branch                    | ltrim unused rows     Remove asterisk
original=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1/")

# TODO: Create temporary backup branch
# TODO: Definitely exit if this branch exists
tmpstr=$(tr -dc A-Za-z0-9 < /dev/urandom | head -c 14)
temporary='tmp.'$tmpstr

# Copy and move ref to temporary branch
git checkout -b $temporary

# Reset original branch to master
git checkout -B $original $master

# Pull over all files from temporary branch
git checkout $temporary -- .

# Collect the commit message of those in $original but not in $master (since..until)
aggregate=$(git log $master..$temporary --format=format:%s)

# Commit files with aggregate commit messages and input message
git commit -F- <<EOF
$message
$aggregate
EOF

# Delete backup branch
git branch -D $temporary